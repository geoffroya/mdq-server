<?xml version="1.0" encoding="UTF-8"?>
<!--
    Common beans for this channel.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    default-lazy-init="true"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    
    <!--
        Location of various resources.
    -->
    <bean id="us_incommon_productionAggregate_url" class="java.lang.String">
        <constructor-arg value="http://md.incommon.org/InCommon/InCommon-metadata.xml"/>
    </bean>
    <bean id="us_incommon_fallbackAggregate_url" class="java.lang.String">
        <constructor-arg value="http://md.incommon.org/InCommon/InCommon-metadata-fallback.xml"/>
    </bean>
    <bean id="us_incommon_previewAggregate_url" class="java.lang.String">
        <constructor-arg value="http://md.incommon.org/InCommon/InCommon-metadata-preview.xml"/>
    </bean>
    <bean id="us_incommon_legacyAggregate_url" class="java.lang.String">
        <constructor-arg value="http://wayf.incommonfederation.org/InCommon/InCommon-metadata.xml"/>
    </bean>
    
    <!--
        Fetch the production aggregate.
    -->
    <bean id="us_incommon_productionAggregate" parent="DOMResourceSourceStage"
        p:id="us_incommon_productionAggregate">
        <property name="DOMResource">
            <bean parent="HTTPResource">
                <constructor-arg name="client" ref="httpClient"/>
                <constructor-arg name="url"    ref="us_incommon_productionAggregate_url"/>
            </bean>
        </property>
    </bean>
    
    <!--
        InCommon signing certificate.
    -->
    <bean id="us_incommon_signingCertificate" parent="X509CertificateFactoryBean">
        <property name="resource">
            <bean parent="ClassPathResource">
                <constructor-arg value="us_incommon/inc-md-cert.pem"/>
            </bean>
        </property>
    </bean>
    
    <!--
        Check InCommon signing signature.
    -->
    <bean id="us_incommon_checkSignature" parent="XMLSignatureValidationStageSHA256"
        p:id="us_incommon_checkSignature">
        <property name="verificationCertificate" ref="us_incommon_signingCertificate"/>
    </bean>

    <!--
        us_incommon_registrar
        
        Unique ID for the registrar associated with this channel.
        
        This isn't a formalised value, but a placeholder Tom Scavo thinks
        might be what they will end up using.
    -->
    <bean id="us_incommon_registrar" class="java.lang.String">
        <constructor-arg value="https://incommon.org"/>
    </bean>
    
    <!--
        us_incommon_check_regauth
        
        Any registrationAuthority already present on an entity in this
        channel must match the known registration authority value.
    -->
    <bean id="us_incommon_check_regauth" parent="check_regauth_parent"
        p:id="us_incommon_check_regauth">
        <property name="transformParameters">
            <map>
                <entry key="expectedAuthority" value-ref="us_incommon_registrar"/>
            </map>
        </property>
    </bean>
    
    <!--
        us_incommon_default_regauth
        
        Provide a default registrationAuthority appropriate to
        this channel.
    -->
    <bean id="us_incommon_default_regauth" parent="default_regauth_parent"
        p:id="us_incommon_default_regauth">
        <property name="transformParameters">
            <map>
                <entry key="defaultAuthority" value-ref="us_incommon_registrar"/>
            </map>
        </property>
    </bean>
    
    <!--
        Fetch the production entities as a collection.
    -->
    <bean id="us_incommon_productionEntities" parent="CompositeStage"
        p:id="us_incommon_productionEntities">
        <property name="composedStages">
            <list>
                <ref bean="us_incommon_productionAggregate"/>

                <!--
                    Check for fatal errors at the aggregate level:
                        missing or expired validUntil attribute
                        invalid signature
                -->
                <ref bean="check_validUntil"/>
                <ref bean="us_incommon_checkSignature"/>
                <ref bean="errorTerminatingFilter"/>
                
                <ref bean="disassemble"/>
            </list>
        </property>
    </bean>
    
    <!--
        Synthesise an export collection by filtering the production entities.
    -->
    <bean id="us_incommon_exportedEntities" parent="CompositeStage"
        p:id="us_incommon_exportedEntities">
        <property name="composedStages">
            <list>
                <ref bean="us_incommon_productionAggregate"/>
                
                <!--
                    Check for fatal errors at the aggregate level:
                        missing or expired validUntil attribute
                        invalid signature
                -->
                <ref bean="check_validUntil"/>
                <ref bean="us_incommon_checkSignature"/>
                <ref bean="errorTerminatingFilter"/>
                
                <ref bean="disassemble"/>
                
                <!--
                    ***********************************
                    ***                             ***
                    ***   InCommon export ruleset   ***
                    ***                             ***
                    ***********************************
                -->
                    
                <!--
                    Filter out all entities not involved in the pilot.
                -->
                <bean parent="stage_parent"
                    class="net.shibboleth.metadata.dom.saml.EntityFilterStage"
                    p:id="us_incommon_pilot_filterEntities"
                    p:whitelistingEntities="true">
                    <property name="designatedEntities">
                        <set>
                            <value>https://ligo.org/ligovirgo/cbcnote/shibboleth-sp</value>
                            <value>https://wiki.ligo.org/shibboleth-sp</value>
                        </set>
                    </property>
                </bean>
                
                <!--
                    Remove all contact information.
                -->
                <bean parent="stage_parent"
                    class="net.shibboleth.metadata.dom.saml.ContactPersonFilterStage"
                    p:id="us_incommon_remove_contacts"
                    p:whitelistingTypes="true">
                    <property name="designatedTypes">
                        <set>
                            <!-- no whitelisted types implies remove everything -->
                        </set>
                    </property>                    
                </bean>
                
                <!--
                    ******************************
                    ***                        ***
                    ***   UKf import ruleset   ***
                    ***                        ***
                    ******************************
                -->
                
                <!-- default and check registrar -->
                <ref bean="us_incommon_default_regauth"/>
                <ref bean="us_incommon_check_regauth"/>
            </list>
        </property>
    </bean>
    
    <!--
        Fake an export aggregate by aggregating the exported entities.
    -->
    <bean id="us_incommon_exportedAggregate" parent="CompositeStage"
        p:id="us_incommon_exportedAggregate">
        <property name="composedStages">
            <list>
                <ref bean="us_incommon_exportedEntities"/>
                <ref bean="assemble"/>
            </list>
        </property>
    </bean>

</beans>
